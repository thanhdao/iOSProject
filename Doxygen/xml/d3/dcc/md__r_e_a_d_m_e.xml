<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.3.1">
  <compounddef id="d3/dcc/md__r_e_a_d_m_e" kind="page">
    <compoundname>md_README</compoundname>
    <title>PDF Reader Core for iOS</title>
    <detaileddescription>
<para><heading level="3">Introduction</heading>
</para><para>I&apos;ve crafted this open source PDF reader code for fellow iOS developers struggling with wrangling PDF files onto iOS device screens.</para><para>The code is universal and does not require any XIBs (as all UI elements are code generated, allowing for greatest flexibility). It runs on iPad, iPhone and iPod touch with iOS 4.0 and up. Also supported are the Retina displays in all new devices and is ready to be fully internationalized. The idea was to provide a complete project template that you could start building from, or, just pull the required files into an existing project to enable PDF reading/viewing in your app(s).</para><para><image type="html" name="wxC1B.png"></image>
</para><para><image type="html" name="4VNyQ.png"></image>
</para><para><image type="html" name="T6nfI.png"></image>
</para><para><image type="html" name="wxQRC.png"></image>
</para><para>After launching the sample app, tap on the left hand side of the screen to go back a page. Tap on the right hand side to go to the next page. You can also swipe left and right to change pages. Tap on the screen to fade in the toolbar and page slider. Double-tap with one finger (or pinch out) to zoom in. Double tap with two fingers (or pinch in) to zoom out.</para><para>This implementation has been tested with large PDF files (over 250MB in size and over 2800 pages in length) and with PDF files of all flavors (from text only documents to graphics heavy magazines). It also works rather well on older devices (such as the iPod touch 2nd generation and iPhone 3G) and takes advantage of the dual-core processor (via <ref refid="dd/dbf/class_c_a_tiled_layer" kindref="compound">CATiledLayer</ref> and multi-threading) in new devices.</para><para>To see an example open source PDF Viewer App that uses this code as its base, have a look at this project repository on GitHub: <ulink url="https://github.com/vfr/Viewer">https://github.com/vfr/Viewer</ulink></para><para><heading level="3">Features</heading>
</para><para>Multithreaded: The UI is always quite smooth and responsive.</para><para>Supports:</para><para><itemizedlist>
<listitem><para>iBooks-like document navigation.</para></listitem><listitem><para>Device rotation and all orientations.ยน</para></listitem><listitem><para>Encrypted (password protected) PDFs.</para></listitem><listitem><para>PDF links (URI and go to page).</para></listitem><listitem><para>PDFs with rotated pages.</para></listitem></itemizedlist>
</para><para><heading level="3">Notes</heading>
</para><para>Version 2.x of the PDF reader code was originally developed and tested under Xcode 3.2.6, LLVM 1.7, iOS 4.3.5 and iOS 4.2.1 with current development and testing under Xcode 4.5, LLVM 4.1, iOS 5/6. Please note that as of v2.6, the code was refactored to use ARC.</para><para>The overall PDF reader functionality is encapsulated in the <ref refid="d5/dfd/interface_reader_view_controller" kindref="compound">ReaderViewController</ref> class. To present a document with this class, you first need to create a <ref refid="dc/d78/interface_reader_document" kindref="compound">ReaderDocument</ref> object with the file path to the PDF document and then initialize a new <ref refid="d5/dfd/interface_reader_view_controller" kindref="compound">ReaderViewController</ref> with this <ref refid="dc/d78/interface_reader_document" kindref="compound">ReaderDocument</ref> object. The <ref refid="d5/dfd/interface_reader_view_controller" kindref="compound">ReaderViewController</ref> class uses a <ref refid="dc/d78/interface_reader_document" kindref="compound">ReaderDocument</ref> object to store information about the document and to keep track of document properties (thumb cache directory path, bookmarks and the current page number for example).</para><para>An initialized <ref refid="d5/dfd/interface_reader_view_controller" kindref="compound">ReaderViewController</ref> can then be presented modally, pushed onto a UINavigationController stack, placed in a UITabBarController tab, or be used as a root view controller. Please note that since <ref refid="d5/dfd/interface_reader_view_controller" kindref="compound">ReaderViewController</ref> implements its own toolbar, you need to hide the UINavigationController navigation bar before pushing it and then show the navigation bar after popping it. The <ref refid="d7/de5/interface_reader_demo_controller" kindref="compound">ReaderDemoController</ref> class shows how this is done with a bundled PDF file. To create a &apos;book as an app&apos;, please see the <ref refid="d1/dfc/interface_reader_book_delegate" kindref="compound">ReaderBookDelegate</ref> class.</para><para><heading level="3">Required Files</heading>
</para><para>The following files are required to incorporate the PDF reader into one of your projects: <verbatim>CGPDFDocument.h, CGPDFDocument.m
ReaderDocument.h, ReaderDocument.m
ReaderConstants.h, ReaderConstants.m
ReaderViewController.h, ReaderViewController.m
ReaderMainToolbar.h, ReaderMainToolbar.m
ReaderMainPagebar.h, ReaderMainPagebar.m
ReaderContentView.h, ReaderContentView.m
ReaderContentPage.h, ReaderContentPage.m
ReaderContentTile.h, ReaderContentTile.m
ReaderThumbCache.h, ReaderThumbCache.m
ReaderThumbRequest.h, ReaderThumbRequest.m
ReaderThumbQueue.h, ReaderThumbQueue.m
ReaderThumbFetch.h, ReaderThumbFetch.m
ReaderThumbRender.h, ReaderThumbRender.m
ReaderThumbView.h, ReaderThumbView.m
ReaderThumbsView.h, ReaderThumbsView.m
ThumbsViewController.h, ThumbsViewController.m
ThumbsMainToolbar.h, ThumbsMainToolbar.m
UIXToolbarView.h, UIXToolbarView.m

Reader-Button-H.png, Reader-Button-H@2x.png
Reader-Button-N.png, Reader-Button-N@2x.png
Reader-Email.png, Reader-Email@2x.png
Reader-Mark-N.png, Reader-Mark-N@2x.png
Reader-Mark-Y.png, Reader-Mark-Y@2x.png
Reader-Print.png, Reader-Print@2x.png
Reader-Thumbs.png, Reader-Thumbs@2x.png

Localizable.strings (UTF-16 encoding)
</verbatim></para><para><heading level="3">Required iOS Frameworks</heading>
</para><para>To incorporate the PDF reader code into one of your projects, all of the following iOS frameworks are required: <verbatim>UIKit, Foundation, CoreGraphics, QuartzCore, ImageIO, MessageUI
</verbatim></para><para><heading level="3">Compile Time Options</heading>
</para><para>In <ref refid="d9/dca/_reader_constants_8h" kindref="compound">ReaderConstants.h</ref> the following #define options are available:</para><para><computeroutput>READER_BOOKMARKS</computeroutput> - If TRUE, enables page bookmark support.</para><para><computeroutput>READER_ENABLE_MAIL</computeroutput> - If TRUE, an email button is added to the toolbar (if the device is properly configured for email support).</para><para><computeroutput>READER_ENABLE_PRINT</computeroutput> - If TRUE, a print button is added to the toolbar (if printing is supported and available on the device).</para><para><computeroutput>READER_ENABLE_THUMBS</computeroutput> - If TRUE, a thumbs button is added to the toolbar (enabling page thumbnail document navigation).</para><para><computeroutput>READER_DISABLE_IDLE</computeroutput> - If TRUE, the iOS idle timer is disabled while viewing a document (beware of battery drain).</para><para><computeroutput>READER_SHOW_SHADOWS</computeroutput> - If TRUE, a shadow is shown around each page and the page content is inset by a couple of extra points.</para><para><computeroutput>READER_STANDALONE</computeroutput> - If FALSE, a &quot;Done&quot; button is added to the toolbar and the -dismissReaderViewController: delegate method is messaged when it is tapped.</para><para><computeroutput>READER_DISABLE_RETINA</computeroutput> - If TRUE, sets the <ref refid="dd/dbf/class_c_a_tiled_layer" kindref="compound">CATiledLayer</ref> contentScale to 1.0f. This effectively disables retina support and results in non-retina device rendering speeds on retina display devices at the loss of retina display quality.</para><para><computeroutput>READER_ENABLE_PREVIEW</computeroutput> - If TRUE, a medium resolution page thumbnail is displayed before the <ref refid="dd/dbf/class_c_a_tiled_layer" kindref="compound">CATiledLayer</ref> starts to render the PDF page.</para><para><heading level="3"><ref refid="dc/d78/interface_reader_document" kindref="compound">ReaderDocument</ref> Archiving</heading>
</para><para>To change where the property list for <ref refid="dc/d78/interface_reader_document" kindref="compound">ReaderDocument</ref> objects is stored (~/Library/Application Support/ by default), see the +archiveFilePath: method in the <ref refid="d3/dfb/_reader_document_8m" kindref="compound">ReaderDocument.m</ref> source file. Archiving and unarchiving of the <ref refid="dc/d78/interface_reader_document" kindref="compound">ReaderDocument</ref> object for a document is mandatory since this is where the current page number, bookmarks and directory of the document page thumb cache is kept.</para><para><heading level="3">Caveats</heading>
</para><para>ยน There appears to be a bug in iOS 4 with its view controller rotation handling when a modal view controller is presented in landscape from a modal view controller when the status bar is visible on iPhone and iPod touch. The good news is that iOS 5 appears to have fixed this bug.</para><para><heading level="3">Contact Info</heading>
</para><para>Website: <ulink url="http://www.vfr.org/">http://www.vfr.org/</ulink></para><para>Email: joklamcak(at)gmail(dot)com</para><para>If you find this code useful, or wish to fund further development, you can use PayPal to donate to the vfr-Reader project:</para><para><ulink url="https://www.paypal.com/cgi-bin/webscr?cmd=_donations&business=joklamcak@gmail.com&lc=US&item_name=vfr-Reader&no_note=1&currency_code=USD"></ulink></para><para><heading level="3">Acknowledgements</heading>
</para><para>The PDF link support code in the <ref refid="d2/dad/interface_reader_content_page" kindref="compound">ReaderContentPage</ref> class is based on the links navigation code by Sorin Nistor from <ulink url="http://ipdfdev.com/">http://ipdfdev.com/</ulink>.</para><para><heading level="3">License</heading>
</para><para>This code has been made available under the MIT License. </para>    </detaileddescription>
  </compounddef>
</doxygen>
